version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smartHome_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-smarthome_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./server/database.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Server (Development)
  server:
    build: 
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: smartHome_server_dev
    restart: unless-stopped
    ports:
      - "5001:5001"
    environment:
      NODE_ENV: development
      PORT: 5001
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: ${POSTGRES_USER:-postgres}
      PG_PASSWORD: ${POSTGRES_PASSWORD:-password}
      PG_DATABASE: ${POSTGRES_DB:-smarthome_dev}
      JWT_SECRET: ${JWT_SECRET}
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./server:/app
      - /app/node_modules
      - ./server/uploads:/app/uploads

  # Frontend Client (Development)
  client:
    build: 
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: smartHome_client_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:5001
      REACT_APP_GOOGLE_CLIENT_ID: ${REACT_APP_GOOGLE_CLIENT_ID}
      REACT_APP_RECAPTCHA_SITE_KEY: ${REACT_APP_RECAPTCHA_SITE_KEY}
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    depends_on:
      - server
    networks:
      - app-network
    volumes:
      - ./client:/app
      - /app/node_modules

volumes:
  postgres_dev_data:

networks:
  app-network:
    driver: bridge
